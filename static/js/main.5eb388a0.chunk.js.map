{"version":3,"sources":["atoms.ts","components/UpperMenu.tsx","components/Chart.tsx","components/CoinInfo.tsx","components/Price.tsx","routes/Coindetail.tsx","components/Coin.tsx","components/Coins.tsx","routes/Coinlist.tsx","routes/Welcome.tsx","routes/Home.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["darkModeState","atom","key","default","coinsState","Wrapper","styled","div","Menu","props","theme","textColor","BtnWarpper","bgColor","ModeToggleBtn","svg","UpperMenu","useRecoilState","isDarkMode","setIsDarkMode","onToggle","curr","to","as","onClick","style","color","focusable","xmlns","viewBox","fill","d","Chart","InnerWrapper","InfoSpan","span","Tabs","Tab","CoinInfo","state","useLocation","coinId","useParams","console","log","useState","coinState","setACoinState","setIsLoading","getData","a","fetch","json","data","useEffect","id","name","symbol","Price","Coindetail","path","ACoin","li","Coin","coin","pathname","width","height","src","toLowerCase","Status","accentColor","Coins","isLoading","coins","setCoins","slice","map","Coinlist","Title","Welcome","GlobalStyle","createGlobalStyle","Home","exact","Router","basename","process","darkTheme","lightTheme","App","useRecoilValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5eb388a0.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const darkModeState = atom({\r\n  key: \"darkMode\",\r\n  default: false,\r\n});\r\n\r\nexport interface ICoins {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nexport interface IACoin {\r\n  beta_value: number;\r\n  circulating_supply: number;\r\n  first_data_at: string;\r\n  id: string;\r\n  last_updated: string;\r\n  max_supply: number;\r\n  name: string;\r\n  quotes: IQuotes;\r\n  rank: string;\r\n  symbol: string;\r\n  total_supply: number;\r\n}\r\n\r\nexport interface IQuotes {\r\n  USD: {\r\n    ath_date: string;\r\n    ath_price: number;\r\n    market_cap: number;\r\n    market_cap_change_24h: number;\r\n    percent_change_1h: number;\r\n    percent_change_1y: number;\r\n    percent_change_6h: number;\r\n    percent_change_7d: number;\r\n    percent_change_12h: number;\r\n    percent_change_15m: number;\r\n    percent_change_24h: number;\r\n    percent_change_30d: number;\r\n    percent_change_30m: number;\r\n    percent_from_price_ath: number;\r\n    price: number;\r\n    volume_24h: number;\r\n    volume_24h_change_24h: number;\r\n  };\r\n}\r\n\r\nexport const coinsState = atom<ICoins[]>({\r\n  key: \"coinsState\",\r\n  default: [],\r\n});\r\n\r\nexport const aCoinState = atom<IACoin[]>({\r\n  key: \"aCoinState\",\r\n  default: [],\r\n});\r\n","import { Link } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { darkModeState } from \"../atoms\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 80%;\r\n  height: 100px;\r\n  margin: 20px auto;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  box-shadow: 0px 2px 5px ${(props) => props.theme.textColor};\r\n  padding: 20px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\nconst BtnWarpper = styled.div`\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  position: absolute;\r\n  right: 10px;\r\n`;\r\n\r\nconst ModeToggleBtn = styled.svg`\r\n  color: ${(props) => props.theme.textColor};\r\n  width: 1rem;\r\n  height: 1rem;\r\n`;\r\n\r\nfunction UpperMenu() {\r\n  const [isDarkMode, setIsDarkMode] = useRecoilState(darkModeState);\r\n  const onToggle = () => {\r\n    setIsDarkMode((curr) => !curr);\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <Menu>\r\n        <Link to=\"/\"> Home </Link>\r\n        <span> &nbsp; | &nbsp;</span> <Link to=\"/coinlist\"> Coin List </Link>\r\n        {isDarkMode ? (\r\n          <BtnWarpper as=\"button\" onClick={onToggle}>\r\n            <ModeToggleBtn\r\n              style={{ color: \"rgb(224, 214, 73)\" }}\r\n              focusable=\"false\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 512 512\"\r\n            >\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"\r\n              ></path>\r\n            </ModeToggleBtn>\r\n          </BtnWarpper>\r\n        ) : (\r\n          <BtnWarpper as=\"button\" onClick={onToggle}>\r\n            <ModeToggleBtn\r\n              focusable=\"false\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 512 512\"\r\n            >\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"\r\n              ></path>\r\n            </ModeToggleBtn>\r\n          </BtnWarpper>\r\n        )}\r\n      </Menu>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default UpperMenu;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  height: 500px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid ${(props) => props.theme.textColor};\r\n  border-top: 0;\r\n  font-size: 3rem;\r\n`;\r\n\r\nfunction Chart() {\r\n  return <Wrapper>Chart</Wrapper>;\r\n}\r\nexport default Chart;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link, useLocation, useParams } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { aCoinState, coinsState, IACoin } from \"../atoms\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  p {\r\n    margin: 20px auto;\r\n  }\r\n`;\r\n\r\nconst InfoSpan = styled.span`\r\n  border-radius: 5px;\r\n  width: 45%;\r\n  padding: 10px;\r\n  background-color: rgba(52, 73, 94, 0.5);\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 60px;\r\n  background-color: rgba(186, 235, 198, 0.4);\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border: 1px solid ${(props) => props.theme.textColor};\r\n  padding: 10px;\r\n`;\r\n\r\nconst Tab = styled.div`\r\n  color: ${(props) => props.theme.textColor};\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  width: 45%;\r\n  background-color: rgba(52, 73, 94, 0.5);\r\n  padding: 10px;\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface IDetailProps {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n}\r\n\r\nfunction CoinInfo() {\r\n  const { state } = useLocation<IDetailProps>();\r\n  const { coinId } = useParams<{ coinId: string }>();\r\n\r\n  console.log(\"state\", state);\r\n  console.log(\"coinId\", coinId);\r\n\r\n  const [coinState, setACoinState] = useState<IACoin>();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const getData = async () => {\r\n    try {\r\n      const data = await (\r\n        await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\r\n      ).json();\r\n\r\n      setACoinState(data);\r\n      setIsLoading(false);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <InnerWrapper>\r\n        <InfoSpan>아이디: {coinState?.id}</InfoSpan>\r\n        <InfoSpan>아이디: {coinState?.id}</InfoSpan>\r\n      </InnerWrapper>\r\n      <InnerWrapper>\r\n        <p>\r\n          {coinState?.name} :{coinState?.symbol}{\" \"}\r\n        </p>\r\n      </InnerWrapper>\r\n      <Tabs>\r\n        <Tab>\r\n          <Link to={`/detail/${coinId}/chart`}>Chart</Link>\r\n        </Tab>\r\n        <Tab>\r\n          <Link to={`/detail/${coinId}/price`}>Price</Link>\r\n        </Tab>\r\n      </Tabs>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default CoinInfo;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  height: 500px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid ${(props) => props.theme.textColor};\r\n  border-top: 0;\r\n  font-size: 3rem;\r\n`;\r\nfunction Price() {\r\n  return <Wrapper>Price</Wrapper>;\r\n}\r\nexport default Price;\r\n","import { stringify } from \"querystring\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useLocation, useParams } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { aCoinState } from \"../atoms\";\r\nimport Chart from \"../components/Chart\";\r\nimport CoinInfo from \"../components/CoinInfo\";\r\nimport Price from \"../components/Price\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nfunction Coindetail() {\r\n  return (\r\n    <Wrapper>\r\n      <CoinInfo />\r\n      <Switch>\r\n        <Route path={`/detail/:coinId/chart`}>\r\n          <Chart />\r\n        </Route>\r\n        <Route path={`/detail/:coinId/price`}>\r\n          <Price />\r\n        </Route>\r\n      </Switch>\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default Coindetail;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { ICoins } from \"../atoms\";\r\n\r\nconst ACoin = styled.li`\r\n  background-color: ${(props) => props.theme.textColor};\r\n  color: ${(props) => props.theme.bgColor};\r\n  margin-bottom: 20px;\r\n  box-shadow: 0px 5px 10px #49a9e0;\r\n  transition: 0.5s;\r\n  a {\r\n    padding: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  &:hover {\r\n    color: #f1c40f;\r\n    transform: rotateX(360deg);\r\n  }\r\n`;\r\n\r\ninterface ICoin {\r\n  coin: ICoins;\r\n}\r\n\r\nfunction Coin({ coin }: ICoin) {\r\n  return (\r\n    <>\r\n      <ACoin key={coin.id}>\r\n        <Link\r\n          to={{\r\n            pathname: `/detail/${coin.id}`,\r\n            state: {\r\n              id: coin.id,\r\n              name: coin.name,\r\n              symbol: coin.symbol,\r\n            },\r\n          }}\r\n        >\r\n          <img\r\n            style={{ width: \"1.5rem\", height: \"1.5rem\" }}\r\n            src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n          />\r\n          &nbsp;&nbsp;&nbsp;\r\n          {coin.name}\r\n        </Link>\r\n      </ACoin>\r\n    </>\r\n  );\r\n}\r\nexport default Coin;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { coinsState } from \"../atoms\";\r\nimport Coin from \"./Coin\";\r\n\r\nconst Status = styled.span`\r\n  color: ${(props) => props.theme.accentColor};\r\n  font-size: 3rem;\r\n  place-self: center;\r\n`;\r\n\r\nfunction Coins() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [coins, setCoins] = useRecoilState(coinsState);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const data = await (\r\n        await fetch(\"https://api.coinpaprika.com/v1/coins\")\r\n      ).json();\r\n      setCoins(data);\r\n      setIsLoading(false);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  console.log(coins);\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {isLoading ? (\r\n          <Status>Loading...</Status>\r\n        ) : (\r\n          coins.slice(0, 100).map((coin) => <Coin key={coin.id} coin={coin} />)\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default Coins;\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Coins from \"../components/Coins\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 650px;\r\n  margin: 0 auto;\r\n`;\r\nfunction Coinlist() {\r\n  return (\r\n    <Wrapper>\r\n      <Coins />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Coinlist;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 80vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 100px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nfunction Welcome() {\r\n  return (\r\n    <Wrapper>\r\n      <Title>Welcome</Title>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Welcome;\r\n","import { Route, Switch } from \"react-router-dom\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport UpperMenu from \"../components/UpperMenu\";\r\nimport Coindetail from \"./Coindetail\";\r\nimport Coinlist from \"./Coinlist\";\r\nimport Welcome from \"./Welcome\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, menu, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmain, menu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, main, menu, nav, section {\r\n  display: block;\r\n}\r\n/* HTML5 hidden-attribute fix for newer browsers */\r\n*[hidden] {\r\n    display: none;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nmenu, ol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  font-weight: 300;\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  color:${(props) => props.theme.textColor};\r\n  line-height: 1.2;\r\n  background-color: ${(props) => props.theme.bgColor}\r\n}\r\na {\r\n  text-decoration:none;\r\n  color:inherit;\r\n}\r\n`;\r\nconst Wrapper = styled.div``;\r\nfunction Home() {\r\n  return (\r\n    <Wrapper>\r\n      <GlobalStyle />\r\n      <UpperMenu />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Welcome />\r\n        </Route>\r\n        <Route path=\"/coinlist\">\r\n          <Coinlist />\r\n        </Route>\r\n        <Route path=\"/detail/:coinId\">\r\n          <Coindetail />\r\n        </Route>\r\n      </Switch>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { atom } from \"recoil\";\r\nimport { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"black\",\r\n  textColor: \"white\",\r\n  accentColor: \"#9b59b6\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"white\",\r\n  textColor: \"black\",\r\n  accentColor: \"#9b59b6\",\r\n};\r\n","import { useRecoilValue } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darkModeState } from \"./atoms\";\nimport Router from \"./Router\";\nimport { darkTheme, lightTheme } from \"./theme\";\n\nfunction App() {\n  const isDarkMode = useRecoilValue(darkModeState);\n\n  return (\n    <>\n      <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\n        <Router />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme, lightTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}